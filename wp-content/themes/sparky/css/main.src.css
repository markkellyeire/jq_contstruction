/*
|--------------------------------------------------------------------------
| Main stylesheet
|--------------------------------------------------------------------------
| 
| This is the main stylesheet file. It should have no styles in it but it
| should import all the required files from the SMACSS-categorised
| categories. The explanation for the layout is as follows:
| 
| BASE
| This is where all the base styles live; resets, element defaults,
| default font sizes, etc. This category is mainly dominated by element
| selectors. You should always ask yourself if a ruleset must live in
| base in order to not lose flexibility down the road.
| 
| LAYOUT
| In this section you specify all types of layout containers, such as
| header, footer, content, sidebar, etc. The layout elements haven't got
| any styles applied to them, they only divide the website into sections.
| This is the layer where grid systems etc, would be living.
| 
| MODULES
| The bulk of your css is made up of independent modules and submodules.
| Every module should be completely independent of its context and should
| work within any layout container or other module.
| 
| If a specific context requires changes to a module you rather create
| a submodule that describes the context instead changing styles based
| on the parent.
| 
| STATE
| Modules can be in different types of states: class-based-states(.is-active),
| pseudo-classes(:hover, :focus), attribute states(data-state="rotating"),
| or @mediaquery states.
| These states belong directly to the modules but have a different category
| because the have their own naming convention and usage rules.
| 
| THEME
| SMACSS points to an optional fifth category, theme, but this is only
| applicable to pages that require theming. Theme styles override or extend
| the modules, and only apply colors and backgrounds.
| 
| VENDOR
| Any external libraries or plugin files should reside in the vendor directory.
| 
*/
/*
|--------------------------------------------------------------------------
| Config
|--------------------------------------------------------------------------
| 
| Store all our variables here, they will be available throughout all the
| SCSS files.
| 
*/
/*
|--------------------------------------------------------------------------
| Mixins
|--------------------------------------------------------------------------
| 
| Any additional mixins that Bourbon doesn't include, drop them in
| this file.
| 
*/
/*
|--------------------------------------------------------------------------
| Font mixin
|--------------------------------------------------------------------------
| 
| Simple font mixin that will automatically sets the line-height. Also
| allows us to set the colour at the same time.
| 
*/
/* normalize.css v3.0.0 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8+, and Opera
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*
|--------------------------------------------------------------------------
| Base stylesheet
|--------------------------------------------------------------------------
| 
| This is where all the base styles live; resets, element defaults,
| default font sizes, etc. This category is mainly dominated by element
| selectors. You should always ask yourself if a ruleset must live in
| base in order to not lose flexibility down the road.
| 
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  background: white;
  color: #333333;
  font: normal 16px/20.8px "my-custom-font", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

img {
  display: block;
}
img.responsive {
  height: auto;
  max-width: 100%;
  width: 100%;
}

pre {
  -moz-tab-size: 4;
  -o-tab-size: 4;
  tab-size: 4;
}

a {
  -webkit-transition: all 0.3s;
  -moz-transition: all 0.3s;
  transition: all 0.3s;
  color: #bada55;
  text-decoration: underline;
}
a:hover {
  color: #b00b1e;
  text-decoration: none;
}

/*
|--------------------------------------------------------------------------
| Layout stylesheet
|--------------------------------------------------------------------------
| 
| In this section you specify all types of layout containers, such as
| header, footer, content, sidebar, etc. The layout elements haven't got
| any styles applied to them, they only divide the website into sections.
| This is the layer where grid systems etc, would be living.
| 
*/
.container {
  *zoom: 1;
  max-width: 1020px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 30px;
  padding-right: 30px;
  position: relative;
}
.container:before, .container:after {
  content: " ";
  display: table;
}
.container:after {
  clear: both;
}

.row {
  *zoom: 1;
  display: block;
}
.row:before, .row:after {
  content: " ";
  display: table;
}
.row:after {
  clear: both;
}

.column-half {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 48.82117%;
}
.column-half:last-child {
  margin-right: 0;
}

.column-third {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 31.76157%;
}
.column-third:last-child {
  margin-right: 0;
}

.column-two-thirds {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 65.88078%;
}
.column-two-thirds:last-child {
  margin-right: 0;
}

.column-quarter {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%;
}
.column-quarter:last-child {
  margin-right: 0;
}

.column-fifth {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 18.11388%;
}
.column-fifth:last-child {
  margin-right: 0;
}

.column-last {
  margin-right: 0;
}

/*
|--------------------------------------------------------------------------
| Modules stylesheet
|--------------------------------------------------------------------------
| 
| The bulk of your css is made up of independent modules and submodules.
| Every module should be completely independent of its context and should
| work within any layout container or other module.
| 
| If a specific context requires changes to a module you rather create
| a submodule that describes the context instead changing styles based
| on the parent.
| 
*/
/*
|--------------------------------------------------------------------------
| Spacing
|--------------------------------------------------------------------------
| 
| Simple margin/padding control over elements.
| 
*/
.man {
  margin: 0;
}

.mas {
  margin: 5px;
}

.mam {
  margin: 10px;
}

.mal {
  margin: 20px;
}

.max {
  margin: 40px;
}

.pan {
  padding: 0;
}

.pas {
  padding: 5px;
}

.pam {
  padding: 10px;
}

.pal {
  padding: 20px;
}

.pax {
  padding: 40px;
}

.mtn {
  margin-top: 0;
}

.mts {
  margin-top: 5px;
}

.mtm {
  margin-top: 10px;
}

.mtl {
  margin-top: 20px;
}

.mtx {
  margin-top: 40px;
}

.mbn {
  margin-bottom: 0;
}

.mbs {
  margin-bottom: 5px;
}

.mbm {
  margin-bottom: 10px;
}

.mbl {
  margin-bottom: 20px;
}

.mbx {
  margin-bottom: 40px;
}

.mln {
  margin-left: 0;
}

.mls {
  margin-left: 5px;
}

.mlm {
  margin-left: 10px;
}

.mll {
  margin-left: 20px;
}

.mlx {
  margin-left: 40px;
}

.mrn {
  margin-right: 0;
}

.mrs {
  margin-right: 5px;
}

.mrm {
  margin-right: 10px;
}

.mrl {
  margin-right: 20px;
}

.mrx {
  margin-right: 40px;
}

.ptn {
  padding-top: 0;
}

.pts {
  padding-top: 5px;
}

.ptm {
  padding-top: 10px;
}

.ptl {
  padding-top: 20px;
}

.ptx {
  padding-top: 40px;
}

.pbn {
  padding-bottom: 0;
}

.pbs {
  padding-bottom: 5px;
}

.pbm {
  padding-bottom: 10px;
}

.pbl {
  padding-bottom: 20px;
}

.pbx {
  padding-bottom: 40px;
}

.pln {
  padding-left: 0;
}

.pls {
  padding-left: 5px;
}

.plm {
  padding-left: 10px;
}

.pll {
  padding-left: 20px;
}

.plx {
  padding-left: 40px;
}

.prn {
  padding-right: 0;
}

.prs {
  padding-right: 5px;
}

.prm {
  padding-right: 10px;
}

.prl {
  padding-right: 20px;
}

.prx {
  padding-right: 40px;
}

.entry-content img.alignleft, .entry-content img.alignright, .entry-content img.aligncenter {
  margin-bottom: 20px;
}
.entry-content img.alignleft {
  float: left;
  margin-right: 20px;
}
.entry-content img.alignright {
  float: right;
  margin-left: 20px;
}
.entry-content img.aligncenter {
  margin: 0 auto;
}

/*
|--------------------------------------------------------------------------
| State stylesheet
|--------------------------------------------------------------------------
| 
| Modules can be in different types of states: class-based-states(.is-active),
| pseudo-classes(:hover, :focus), attribute states(data-state="rotating"),
| or @mediaquery states.
| These states belong directly to the modules but have a different category
| because the have their own naming convention and usage rules.
| 
*/
.is-hidden {
  display: none !important;
}

/*
|--------------------------------------------------------------------------
| Theme stylesheet
|--------------------------------------------------------------------------
| 
| SMACSS points to an optional fifth category, theme, but this is only
| applicable to pages that require theming. Theme styles override or extend
| the modules, and only apply colors and backgrounds.
| 
*/
/*
|--------------------------------------------------------------------------
| Vendor stylesheets
|--------------------------------------------------------------------------
| 
| Here we'll load any additional libraries or external plugin stylesheets.
| 
*/
